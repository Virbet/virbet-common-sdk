import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import java.util.*

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */
val projectProperties = readProperties(file("../project.properties"))

fun readProperties(propertiesFile: File) = Properties().apply {
    propertiesFile.inputStream().use { fis ->
        load(fis)
    }
}

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
//    id("org.jetbrains.kotlin.jvm") version "1.9.10"
    kotlin("jvm") version "1.9.10"
    kotlin("plugin.serialization") version "1.9.20"

    id("maven-publish")
//    kotlin("kotlin-multiplatform")

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")
    api("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.1")
    api("com.squareup.retrofit2:retrofit:2.9.0")
    api("io.ktor:ktor-client-core:2.3.6")
    api("com.squareup.retrofit2:converter-gson:2.5.0")
    api("org.jetbrains.kotlinx:kotlinx-datetime:0.4.1")
    api("com.aventrix.jnanoid:jnanoid:2.0.0")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.auth0.android:jwtdecode:2.0.2")
    implementation("com.auth0:java-jwt:4.4.0")
	  implementation(kotlin("stdlib-jdk8"))
}

val sourcesJar by tasks.registering(Jar::class) {
    archiveClassifier.set("sources")
    from(sourceSets.main.get().allSource)
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use Kotlin Test test framework
            useKotlinTest("1.9.10")
        }
    }
}

publishing {
    publications {
//        myLib(MavenPublication) {
//            from components.java
//        }
//        Library(MavenPublication) {
//
//        }

        register<MavenPublication>("reposiliteRepositoryReleases") {
            artifactId = "common-sdk"
            version = "0.0.1-snapshot-20"
            from(components["java"])
            artifact(sourcesJar.get())
            pom {
                name.set("Virbet Common SDK")
            }
        }
    }
    repositories {
        maven {
            name = "reposiliteRepositoryReleases"
            url = uri("http://31.214.157.126:83/releases")
            isAllowInsecureProtocol = true

            credentials {
                username = projectProperties.getProperty("mavenCredentialsLogin")
                password = projectProperties.getProperty("mavenCredentialsPassword")
            }
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}
val compileKotlin: KotlinCompile by tasks
compileKotlin.kotlinOptions {
	jvmTarget = "1.8"
}
val compileTestKotlin: KotlinCompile by tasks
compileTestKotlin.kotlinOptions {
	jvmTarget = "1.8"
}